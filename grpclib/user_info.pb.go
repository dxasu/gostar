// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: user_info.proto

package grpclib

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TaskId int32

const (
	TaskId_kUnKnown        TaskId = 0 // 未知
	TaskId_kVipReceiveCoin TaskId = 1 // Vip用户领取
)

// Enum value maps for TaskId.
var (
	TaskId_name = map[int32]string{
		0: "kUnKnown",
		1: "kVipReceiveCoin",
	}
	TaskId_value = map[string]int32{
		"kUnKnown":        0,
		"kVipReceiveCoin": 1,
	}
)

func (x TaskId) Enum() *TaskId {
	p := new(TaskId)
	*p = x
	return p
}

func (x TaskId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskId) Descriptor() protoreflect.EnumDescriptor {
	return file_user_info_proto_enumTypes[0].Descriptor()
}

func (TaskId) Type() protoreflect.EnumType {
	return &file_user_info_proto_enumTypes[0]
}

func (x TaskId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskId.Descriptor instead.
func (TaskId) EnumDescriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{0}
}

type UserGender int32

const (
	UserGender_kUnknown UserGender = 0
	UserGender_kFemale  UserGender = 1
	UserGender_kMale    UserGender = 2
)

// Enum value maps for UserGender.
var (
	UserGender_name = map[int32]string{
		0: "kUnknown",
		1: "kFemale",
		2: "kMale",
	}
	UserGender_value = map[string]int32{
		"kUnknown": 0,
		"kFemale":  1,
		"kMale":    2,
	}
)

func (x UserGender) Enum() *UserGender {
	p := new(UserGender)
	*p = x
	return p
}

func (x UserGender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserGender) Descriptor() protoreflect.EnumDescriptor {
	return file_user_info_proto_enumTypes[1].Descriptor()
}

func (UserGender) Type() protoreflect.EnumType {
	return &file_user_info_proto_enumTypes[1]
}

func (x UserGender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserGender.Descriptor instead.
func (UserGender) EnumDescriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{1}
}

type UidType int32

const (
	UidType_kOrdinary UidType = 0
	UidType_kOfficial UidType = 1
	UidType_kPush     UidType = 2
)

// Enum value maps for UidType.
var (
	UidType_name = map[int32]string{
		0: "kOrdinary",
		1: "kOfficial",
		2: "kPush",
	}
	UidType_value = map[string]int32{
		"kOrdinary": 0,
		"kOfficial": 1,
		"kPush":     2,
	}
)

func (x UidType) Enum() *UidType {
	p := new(UidType)
	*p = x
	return p
}

func (x UidType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UidType) Descriptor() protoreflect.EnumDescriptor {
	return file_user_info_proto_enumTypes[2].Descriptor()
}

func (UidType) Type() protoreflect.EnumType {
	return &file_user_info_proto_enumTypes[2]
}

func (x UidType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UidType.Descriptor instead.
func (UidType) EnumDescriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{2}
}

type RelationType int32

const (
	RelationType_kNone   RelationType = 0 //
	RelationType_kFollow RelationType = 1 // 关注
	RelationType_kFan    RelationType = 2 // 粉丝
	RelationType_kFriend RelationType = 3 // 好友
)

// Enum value maps for RelationType.
var (
	RelationType_name = map[int32]string{
		0: "kNone",
		1: "kFollow",
		2: "kFan",
		3: "kFriend",
	}
	RelationType_value = map[string]int32{
		"kNone":   0,
		"kFollow": 1,
		"kFan":    2,
		"kFriend": 3,
	}
)

func (x RelationType) Enum() *RelationType {
	p := new(RelationType)
	*p = x
	return p
}

func (x RelationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RelationType) Descriptor() protoreflect.EnumDescriptor {
	return file_user_info_proto_enumTypes[3].Descriptor()
}

func (RelationType) Type() protoreflect.EnumType {
	return &file_user_info_proto_enumTypes[3]
}

func (x RelationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RelationType.Descriptor instead.
func (RelationType) EnumDescriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{3}
}

type BlockType int32

const (
	BlockType_kBlockNone BlockType = 0 //
	BlockType_kBlock     BlockType = 1 //拉黑
	BlockType_kBeBlocked BlockType = 2 //被拉黑
)

// Enum value maps for BlockType.
var (
	BlockType_name = map[int32]string{
		0: "kBlockNone",
		1: "kBlock",
		2: "kBeBlocked",
	}
	BlockType_value = map[string]int32{
		"kBlockNone": 0,
		"kBlock":     1,
		"kBeBlocked": 2,
	}
)

func (x BlockType) Enum() *BlockType {
	p := new(BlockType)
	*p = x
	return p
}

func (x BlockType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockType) Descriptor() protoreflect.EnumDescriptor {
	return file_user_info_proto_enumTypes[4].Descriptor()
}

func (BlockType) Type() protoreflect.EnumType {
	return &file_user_info_proto_enumTypes[4]
}

func (x BlockType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockType.Descriptor instead.
func (BlockType) EnumDescriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{4}
}

type RelationCmd int32

const (
	RelationCmd_kRelationAdd    RelationCmd = 0 //  关注
	RelationCmd_kRelationRemove RelationCmd = 1 //  取消关注
)

// Enum value maps for RelationCmd.
var (
	RelationCmd_name = map[int32]string{
		0: "kRelationAdd",
		1: "kRelationRemove",
	}
	RelationCmd_value = map[string]int32{
		"kRelationAdd":    0,
		"kRelationRemove": 1,
	}
)

func (x RelationCmd) Enum() *RelationCmd {
	p := new(RelationCmd)
	*p = x
	return p
}

func (x RelationCmd) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RelationCmd) Descriptor() protoreflect.EnumDescriptor {
	return file_user_info_proto_enumTypes[5].Descriptor()
}

func (RelationCmd) Type() protoreflect.EnumType {
	return &file_user_info_proto_enumTypes[5]
}

func (x RelationCmd) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RelationCmd.Descriptor instead.
func (RelationCmd) EnumDescriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{5}
}

type BlacklistCmd int32

const (
	BlacklistCmd_kBlacklistAdd    BlacklistCmd = 0 //  拉黑
	BlacklistCmd_kBlacklistRemove BlacklistCmd = 1 //  取消拉黑
)

// Enum value maps for BlacklistCmd.
var (
	BlacklistCmd_name = map[int32]string{
		0: "kBlacklistAdd",
		1: "kBlacklistRemove",
	}
	BlacklistCmd_value = map[string]int32{
		"kBlacklistAdd":    0,
		"kBlacklistRemove": 1,
	}
)

func (x BlacklistCmd) Enum() *BlacklistCmd {
	p := new(BlacklistCmd)
	*p = x
	return p
}

func (x BlacklistCmd) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlacklistCmd) Descriptor() protoreflect.EnumDescriptor {
	return file_user_info_proto_enumTypes[6].Descriptor()
}

func (BlacklistCmd) Type() protoreflect.EnumType {
	return &file_user_info_proto_enumTypes[6]
}

func (x BlacklistCmd) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlacklistCmd.Descriptor instead.
func (BlacklistCmd) EnumDescriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{6}
}

type UseStatus int32

const (
	UseStatus_kNoUse UseStatus = 0 //  暂不使用/卸下
	UseStatus_kUse   UseStatus = 1 //  使用
)

// Enum value maps for UseStatus.
var (
	UseStatus_name = map[int32]string{
		0: "kNoUse",
		1: "kUse",
	}
	UseStatus_value = map[string]int32{
		"kNoUse": 0,
		"kUse":   1,
	}
)

func (x UseStatus) Enum() *UseStatus {
	p := new(UseStatus)
	*p = x
	return p
}

func (x UseStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UseStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_user_info_proto_enumTypes[7].Descriptor()
}

func (UseStatus) Type() protoreflect.EnumType {
	return &file_user_info_proto_enumTypes[7]
}

func (x UseStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UseStatus.Descriptor instead.
func (UseStatus) EnumDescriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{7}
}

type VipReceiveCoinResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserBalance   *BalanceResp `protobuf:"bytes,1,opt,name=user_balance,json=userBalance,proto3" json:"user_balance,omitempty"`        // 金币余额
	ReceiveAmount uint32       `protobuf:"varint,2,opt,name=receive_amount,json=receiveAmount,proto3" json:"receive_amount,omitempty"` // 领取数量
}

func (x *VipReceiveCoinResp) Reset() {
	*x = VipReceiveCoinResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipReceiveCoinResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipReceiveCoinResp) ProtoMessage() {}

func (x *VipReceiveCoinResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipReceiveCoinResp.ProtoReflect.Descriptor instead.
func (*VipReceiveCoinResp) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{0}
}

func (x *VipReceiveCoinResp) GetUserBalance() *BalanceResp {
	if x != nil {
		return x.UserBalance
	}
	return nil
}

func (x *VipReceiveCoinResp) GetReceiveAmount() uint32 {
	if x != nil {
		return x.ReceiveAmount
	}
	return 0
}

type VipReceiveCoinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                     // 请求uid
	TaskId uint32 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"` //1:Vip用户领取  TaskId
}

func (x *VipReceiveCoinReq) Reset() {
	*x = VipReceiveCoinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipReceiveCoinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipReceiveCoinReq) ProtoMessage() {}

func (x *VipReceiveCoinReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipReceiveCoinReq.ProtoReflect.Descriptor instead.
func (*VipReceiveCoinReq) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{1}
}

func (x *VipReceiveCoinReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *VipReceiveCoinReq) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

//VIP领取金币状态
type ReceiveResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceiveStatus uint32 `protobuf:"varint,1,opt,name=Receive_status,json=ReceiveStatus,proto3" json:"Receive_status,omitempty"` // 领取状态 0 未领取, 1 已领取 UseStatus
}

func (x *ReceiveResp) Reset() {
	*x = ReceiveResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveResp) ProtoMessage() {}

func (x *ReceiveResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveResp.ProtoReflect.Descriptor instead.
func (*ReceiveResp) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{2}
}

func (x *ReceiveResp) GetReceiveStatus() uint32 {
	if x != nil {
		return x.ReceiveStatus
	}
	return 0
}

type UserBuyVipResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserBalance *BalanceResp `protobuf:"bytes,1,opt,name=user_balance,json=userBalance,proto3" json:"user_balance,omitempty"` // 金币余额
	VipInfo     *VipInfo     `protobuf:"bytes,2,opt,name=vip_info,json=vipInfo,proto3" json:"vip_info,omitempty"`             // vip信息
}

func (x *UserBuyVipResp) Reset() {
	*x = UserBuyVipResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBuyVipResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBuyVipResp) ProtoMessage() {}

func (x *UserBuyVipResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBuyVipResp.ProtoReflect.Descriptor instead.
func (*UserBuyVipResp) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{3}
}

func (x *UserBuyVipResp) GetUserBalance() *BalanceResp {
	if x != nil {
		return x.UserBalance
	}
	return nil
}

func (x *UserBuyVipResp) GetVipInfo() *VipInfo {
	if x != nil {
		return x.VipInfo
	}
	return nil
}

type SearchUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchText string `protobuf:"bytes,1,opt,name=search_text,json=searchText,proto3" json:"search_text,omitempty"` // 查询文本，昵称，用户id
}

func (x *SearchUserReq) Reset() {
	*x = SearchUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserReq) ProtoMessage() {}

func (x *SearchUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserReq.ProtoReflect.Descriptor instead.
func (*SearchUserReq) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{4}
}

func (x *SearchUserReq) GetSearchText() string {
	if x != nil {
		return x.SearchText
	}
	return ""
}

type SearchUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserList []*SimpleUser `protobuf:"bytes,1,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"` //  用户列表
}

func (x *SearchUserResp) Reset() {
	*x = SearchUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserResp) ProtoMessage() {}

func (x *SearchUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserResp.ProtoReflect.Descriptor instead.
func (*SearchUserResp) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{5}
}

func (x *SearchUserResp) GetUserList() []*SimpleUser {
	if x != nil {
		return x.UserList
	}
	return nil
}

type UserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"` // 请求uid
}

func (x *UserInfoReq) Reset() {
	*x = UserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoReq) ProtoMessage() {}

func (x *UserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoReq.ProtoReflect.Descriptor instead.
func (*UserInfoReq) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{6}
}

func (x *UserInfoReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type LevelInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level        uint32 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`                                     // 当前等级
	Exp          uint64 `protobuf:"varint,2,opt,name=exp,proto3" json:"exp,omitempty"`                                         // 当前等级累积的经验值
	NextLevelExp uint64 `protobuf:"varint,3,opt,name=next_level_exp,json=nextLevelExp,proto3" json:"next_level_exp,omitempty"` // 当前等级升到下一等级所需累积的总经验值
}

func (x *LevelInfo) Reset() {
	*x = LevelInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelInfo) ProtoMessage() {}

func (x *LevelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelInfo.ProtoReflect.Descriptor instead.
func (*LevelInfo) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{7}
}

func (x *LevelInfo) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *LevelInfo) GetExp() uint64 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *LevelInfo) GetNextLevelExp() uint64 {
	if x != nil {
		return x.NextLevelExp
	}
	return 0
}

type UserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid             uint64     `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                                                  // 请求uid
	Gender          uint32     `protobuf:"varint,2,opt,name=gender,proto3" json:"gender,omitempty"`                                            // 性别 UserGender
	DisplayName     string     `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`                // 昵称
	Birthday        uint64     `protobuf:"varint,4,opt,name=birthday,proto3" json:"birthday,omitempty"`                                        // 时间戳，秒单位
	Country         string     `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`                                           // 国家代码
	Avatar          string     `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`                                             // 头像
	DesUser         string     `protobuf:"bytes,7,opt,name=des_user,json=desUser,proto3" json:"des_user,omitempty"`                            // 个人签名
	Lang            string     `protobuf:"bytes,8,opt,name=lang,proto3" json:"lang,omitempty"`                                                 // 用户语言
	ShortId         uint64     `protobuf:"varint,9,opt,name=short_id,json=shortId,proto3" json:"short_id,omitempty"`                           // 短id
	PhotoWall       []string   `protobuf:"bytes,10,rep,name=photo_wall,json=photoWall,proto3" json:"photo_wall,omitempty"`                     // 照片墙
	UidType         uint32     `protobuf:"varint,11,opt,name=uid_type,json=uidType,proto3" json:"uid_type,omitempty"`                          // 账号类型 UidType
	VipLevel        uint32     `protobuf:"varint,15,opt,name=vip_level,json=vipLevel,proto3" json:"vip_level,omitempty"`                       // vip等级
	WealthLevelInfo *LevelInfo `protobuf:"bytes,16,opt,name=wealth_level_info,json=wealthLevelInfo,proto3" json:"wealth_level_info,omitempty"` // 财富等级信息
	AvatarEffect    string     `protobuf:"bytes,17,opt,name=avatar_effect,json=avatarEffect,proto3" json:"avatar_effect,omitempty"`            // 头像框装饰图
	RegisterTs      uint64     `protobuf:"varint,18,opt,name=register_ts,json=registerTs,proto3" json:"register_ts,omitempty"`                 // 注册时间戳，秒单位
	LastLoginTs     uint64     `protobuf:"varint,19,opt,name=last_login_ts,json=lastLoginTs,proto3" json:"last_login_ts,omitempty"`            // 最后登陆时间戳，秒单位
}

func (x *UserInfoResp) Reset() {
	*x = UserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoResp) ProtoMessage() {}

func (x *UserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoResp.ProtoReflect.Descriptor instead.
func (*UserInfoResp) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{8}
}

func (x *UserInfoResp) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserInfoResp) GetGender() uint32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UserInfoResp) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UserInfoResp) GetBirthday() uint64 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *UserInfoResp) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UserInfoResp) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserInfoResp) GetDesUser() string {
	if x != nil {
		return x.DesUser
	}
	return ""
}

func (x *UserInfoResp) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *UserInfoResp) GetShortId() uint64 {
	if x != nil {
		return x.ShortId
	}
	return 0
}

func (x *UserInfoResp) GetPhotoWall() []string {
	if x != nil {
		return x.PhotoWall
	}
	return nil
}

func (x *UserInfoResp) GetUidType() uint32 {
	if x != nil {
		return x.UidType
	}
	return 0
}

func (x *UserInfoResp) GetVipLevel() uint32 {
	if x != nil {
		return x.VipLevel
	}
	return 0
}

func (x *UserInfoResp) GetWealthLevelInfo() *LevelInfo {
	if x != nil {
		return x.WealthLevelInfo
	}
	return nil
}

func (x *UserInfoResp) GetAvatarEffect() string {
	if x != nil {
		return x.AvatarEffect
	}
	return ""
}

func (x *UserInfoResp) GetRegisterTs() uint64 {
	if x != nil {
		return x.RegisterTs
	}
	return 0
}

func (x *UserInfoResp) GetLastLoginTs() uint64 {
	if x != nil {
		return x.LastLoginTs
	}
	return 0
}

type BaseInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                                   // 请求uid
	Gender      uint32 `protobuf:"varint,2,opt,name=gender,proto3" json:"gender,omitempty"`                             // 性别
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"` // 昵称
	Birthday    uint64 `protobuf:"varint,4,opt,name=birthday,proto3" json:"birthday,omitempty"`                         // 时间戳，秒单位
	Avatar      string `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`                              // 头像
}

func (x *BaseInfoReq) Reset() {
	*x = BaseInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseInfoReq) ProtoMessage() {}

func (x *BaseInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseInfoReq.ProtoReflect.Descriptor instead.
func (*BaseInfoReq) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{9}
}

func (x *BaseInfoReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *BaseInfoReq) GetGender() uint32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *BaseInfoReq) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *BaseInfoReq) GetBirthday() uint64 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *BaseInfoReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type UpdateUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName string   `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"` // 昵称
	Birthday    uint64   `protobuf:"varint,2,opt,name=birthday,proto3" json:"birthday,omitempty"`                         // 时间戳，秒单位
	Avatar      string   `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                              // 头像
	DesUser     string   `protobuf:"bytes,4,opt,name=des_user,json=desUser,proto3" json:"des_user,omitempty"`             //  个人签名
	PhotoWall   []string `protobuf:"bytes,5,rep,name=photo_wall,json=photoWall,proto3" json:"photo_wall,omitempty"`       // 照片墙
}

func (x *UpdateUserInfoReq) Reset() {
	*x = UpdateUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfoReq) ProtoMessage() {}

func (x *UpdateUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfoReq.ProtoReflect.Descriptor instead.
func (*UpdateUserInfoReq) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateUserInfoReq) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UpdateUserInfoReq) GetBirthday() uint64 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *UpdateUserInfoReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UpdateUserInfoReq) GetDesUser() string {
	if x != nil {
		return x.DesUser
	}
	return ""
}

func (x *UpdateUserInfoReq) GetPhotoWall() []string {
	if x != nil {
		return x.PhotoWall
	}
	return nil
}

type GetUserRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                              //对方的uid
	Type      uint32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`                            //RelationType
	BlockType uint32 `protobuf:"varint,3,opt,name=block_type,json=blockType,proto3" json:"block_type,omitempty"` //BlockType
}

func (x *GetUserRelationResp) Reset() {
	*x = GetUserRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRelationResp) ProtoMessage() {}

func (x *GetUserRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRelationResp.ProtoReflect.Descriptor instead.
func (*GetUserRelationResp) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{11}
}

func (x *GetUserRelationResp) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetUserRelationResp) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetUserRelationResp) GetBlockType() uint32 {
	if x != nil {
		return x.BlockType
	}
	return 0
}

type UserRelationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                                 // 请求uid
	Type       uint32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`                               // RelationType
	StartIndex uint64 `protobuf:"varint,3,opt,name=start_index,json=startIndex,proto3" json:"start_index,omitempty"` // 拉取索引，从0开始
}

func (x *UserRelationReq) Reset() {
	*x = UserRelationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRelationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRelationReq) ProtoMessage() {}

func (x *UserRelationReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRelationReq.ProtoReflect.Descriptor instead.
func (*UserRelationReq) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{12}
}

func (x *UserRelationReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserRelationReq) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UserRelationReq) GetStartIndex() uint64 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

type SimpleUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid             uint64     `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Gender          uint32     `protobuf:"varint,2,opt,name=gender,proto3" json:"gender,omitempty"`                                           // 性别，UserGender定义
	DisplayName     string     `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`               // 昵称
	Birthday        uint64     `protobuf:"varint,4,opt,name=birthday,proto3" json:"birthday,omitempty"`                                       // 生日，时间戳，秒单位
	Avatar          string     `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`                                            // 头像
	DesUser         string     `protobuf:"bytes,6,opt,name=des_user,json=desUser,proto3" json:"des_user,omitempty"`                           // 签名
	VipLevel        uint32     `protobuf:"varint,7,opt,name=vip_level,json=vipLevel,proto3" json:"vip_level,omitempty"`                       // vip等级
	WealthLevelInfo *LevelInfo `protobuf:"bytes,8,opt,name=wealth_level_info,json=wealthLevelInfo,proto3" json:"wealth_level_info,omitempty"` // 财富等级信息
}

func (x *SimpleUser) Reset() {
	*x = SimpleUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleUser) ProtoMessage() {}

func (x *SimpleUser) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleUser.ProtoReflect.Descriptor instead.
func (*SimpleUser) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{13}
}

func (x *SimpleUser) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SimpleUser) GetGender() uint32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *SimpleUser) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *SimpleUser) GetBirthday() uint64 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *SimpleUser) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SimpleUser) GetDesUser() string {
	if x != nil {
		return x.DesUser
	}
	return ""
}

func (x *SimpleUser) GetVipLevel() uint32 {
	if x != nil {
		return x.VipLevel
	}
	return 0
}

func (x *SimpleUser) GetWealthLevelInfo() *LevelInfo {
	if x != nil {
		return x.WealthLevelInfo
	}
	return nil
}

type UserRelationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextIndex uint64        `protobuf:"varint,1,opt,name=next_index,json=nextIndex,proto3" json:"next_index,omitempty"` // 下一次拉取的开始索引, 0表示数据已经完毕
	UserList  []*SimpleUser `protobuf:"bytes,2,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`     //  关系链列表
}

func (x *UserRelationResp) Reset() {
	*x = UserRelationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRelationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRelationResp) ProtoMessage() {}

func (x *UserRelationResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRelationResp.ProtoReflect.Descriptor instead.
func (*UserRelationResp) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{14}
}

func (x *UserRelationResp) GetNextIndex() uint64 {
	if x != nil {
		return x.NextIndex
	}
	return 0
}

func (x *UserRelationResp) GetUserList() []*SimpleUser {
	if x != nil {
		return x.UserList
	}
	return nil
}

type FollowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid uint64 `protobuf:"varint,1,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"` // 目标uid
	Cmd       uint32 `protobuf:"varint,2,opt,name=cmd,proto3" json:"cmd,omitempty"`                              // RelationCmd
}

func (x *FollowReq) Reset() {
	*x = FollowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowReq) ProtoMessage() {}

func (x *FollowReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowReq.ProtoReflect.Descriptor instead.
func (*FollowReq) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{15}
}

func (x *FollowReq) GetTargetUid() uint64 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *FollowReq) GetCmd() uint32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

type BlacklistReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetUid uint64 `protobuf:"varint,1,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"` // 目标uid
	Cmd       uint32 `protobuf:"varint,2,opt,name=cmd,proto3" json:"cmd,omitempty"`                              // BlacklistCmd
}

func (x *BlacklistReq) Reset() {
	*x = BlacklistReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlacklistReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlacklistReq) ProtoMessage() {}

func (x *BlacklistReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlacklistReq.ProtoReflect.Descriptor instead.
func (*BlacklistReq) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{16}
}

func (x *BlacklistReq) GetTargetUid() uint64 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *BlacklistReq) GetCmd() uint32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{17}
}

type RelationCounterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FansCount      uint32 `protobuf:"varint,1,opt,name=fans_count,json=fansCount,proto3" json:"fans_count,omitempty"`                // 粉丝数
	FollowingCount uint32 `protobuf:"varint,2,opt,name=following_count,json=followingCount,proto3" json:"following_count,omitempty"` // 关注数
	BuddyCount     uint32 `protobuf:"varint,3,opt,name=buddy_count,json=buddyCount,proto3" json:"buddy_count,omitempty"`             // 好友数
}

func (x *RelationCounterResp) Reset() {
	*x = RelationCounterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationCounterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationCounterResp) ProtoMessage() {}

func (x *RelationCounterResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationCounterResp.ProtoReflect.Descriptor instead.
func (*RelationCounterResp) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{18}
}

func (x *RelationCounterResp) GetFansCount() uint32 {
	if x != nil {
		return x.FansCount
	}
	return 0
}

func (x *RelationCounterResp) GetFollowingCount() uint32 {
	if x != nil {
		return x.FollowingCount
	}
	return 0
}

func (x *RelationCounterResp) GetBuddyCount() uint32 {
	if x != nil {
		return x.BuddyCount
	}
	return 0
}

type BalanceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentGold    uint32 `protobuf:"varint,1,opt,name=current_gold,json=currentGold,proto3" json:"current_gold,omitempty"`          // 金币余额
	CurrentDiamond uint32 `protobuf:"varint,2,opt,name=current_diamond,json=currentDiamond,proto3" json:"current_diamond,omitempty"` // 钻石余额
	HistoryDiamond uint32 `protobuf:"varint,3,opt,name=history_diamond,json=historyDiamond,proto3" json:"history_diamond,omitempty"` // 历史获得的钻石
}

func (x *BalanceResp) Reset() {
	*x = BalanceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceResp) ProtoMessage() {}

func (x *BalanceResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceResp.ProtoReflect.Descriptor instead.
func (*BalanceResp) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{19}
}

func (x *BalanceResp) GetCurrentGold() uint32 {
	if x != nil {
		return x.CurrentGold
	}
	return 0
}

func (x *BalanceResp) GetCurrentDiamond() uint32 {
	if x != nil {
		return x.CurrentDiamond
	}
	return 0
}

func (x *BalanceResp) GetHistoryDiamond() uint32 {
	if x != nil {
		return x.HistoryDiamond
	}
	return 0
}

type CarInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarId          uint64 `protobuf:"varint,1,opt,name=car_id,json=carId,proto3" json:"car_id,omitempty"`                            // 座驾id
	CarName        string `protobuf:"bytes,2,opt,name=car_name,json=carName,proto3" json:"car_name,omitempty"`                       // 座驾名称
	PreviewPicture string `protobuf:"bytes,3,opt,name=preview_picture,json=previewPicture,proto3" json:"preview_picture,omitempty"`  // 预览图
	DynamicPicture string `protobuf:"bytes,4,opt,name=dynamic_picture,json=dynamicPicture,proto3" json:"dynamic_picture,omitempty"`  // 动态图
	ValidityPeriod uint32 `protobuf:"varint,5,opt,name=validity_period,json=validityPeriod,proto3" json:"validity_period,omitempty"` // 有效天数
	CarPrice       uint32 `protobuf:"varint,6,opt,name=car_price,json=carPrice,proto3" json:"car_price,omitempty"`                   // 座驾价格
	Deadline       uint64 `protobuf:"varint,7,opt,name=deadline,proto3" json:"deadline,omitempty"`                                   // 截止日期 (时间戳)
	UseStatus      uint32 `protobuf:"varint,8,opt,name=use_status,json=useStatus,proto3" json:"use_status,omitempty"`                // 是否正在使用 UseStatus
}

func (x *CarInfo) Reset() {
	*x = CarInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarInfo) ProtoMessage() {}

func (x *CarInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarInfo.ProtoReflect.Descriptor instead.
func (*CarInfo) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{20}
}

func (x *CarInfo) GetCarId() uint64 {
	if x != nil {
		return x.CarId
	}
	return 0
}

func (x *CarInfo) GetCarName() string {
	if x != nil {
		return x.CarName
	}
	return ""
}

func (x *CarInfo) GetPreviewPicture() string {
	if x != nil {
		return x.PreviewPicture
	}
	return ""
}

func (x *CarInfo) GetDynamicPicture() string {
	if x != nil {
		return x.DynamicPicture
	}
	return ""
}

func (x *CarInfo) GetValidityPeriod() uint32 {
	if x != nil {
		return x.ValidityPeriod
	}
	return 0
}

func (x *CarInfo) GetCarPrice() uint32 {
	if x != nil {
		return x.CarPrice
	}
	return 0
}

func (x *CarInfo) GetDeadline() uint64 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

func (x *CarInfo) GetUseStatus() uint32 {
	if x != nil {
		return x.UseStatus
	}
	return 0
}

type CarItemsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarList []*CarInfo `protobuf:"bytes,1,rep,name=car_list,json=carList,proto3" json:"car_list,omitempty"` // 座驾信息列表
}

func (x *CarItemsResp) Reset() {
	*x = CarItemsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarItemsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarItemsResp) ProtoMessage() {}

func (x *CarItemsResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarItemsResp.ProtoReflect.Descriptor instead.
func (*CarItemsResp) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{21}
}

func (x *CarItemsResp) GetCarList() []*CarInfo {
	if x != nil {
		return x.CarList
	}
	return nil
}

type UserProfileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo    *UserInfoResp        `protobuf:"bytes,1,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`          // 用户资料
	UserBalance *BalanceResp         `protobuf:"bytes,2,opt,name=user_balance,json=userBalance,proto3" json:"user_balance,omitempty"` // 金币余额
	UserCounter *RelationCounterResp `protobuf:"bytes,3,opt,name=user_counter,json=userCounter,proto3" json:"user_counter,omitempty"` // 关系计数
	CarItems    *CarItemsResp        `protobuf:"bytes,4,opt,name=car_items,json=carItems,proto3" json:"car_items,omitempty"`          // 座驾物品
}

func (x *UserProfileResp) Reset() {
	*x = UserProfileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProfileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfileResp) ProtoMessage() {}

func (x *UserProfileResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfileResp.ProtoReflect.Descriptor instead.
func (*UserProfileResp) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{22}
}

func (x *UserProfileResp) GetUserInfo() *UserInfoResp {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *UserProfileResp) GetUserBalance() *BalanceResp {
	if x != nil {
		return x.UserBalance
	}
	return nil
}

func (x *UserProfileResp) GetUserCounter() *RelationCounterResp {
	if x != nil {
		return x.UserCounter
	}
	return nil
}

func (x *UserProfileResp) GetCarItems() *CarItemsResp {
	if x != nil {
		return x.CarItems
	}
	return nil
}

type CarInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                              // 目标用户id
	CarId     uint64 `protobuf:"varint,2,opt,name=car_id,json=carId,proto3" json:"car_id,omitempty"`             // 更换的car_id
	UseStatus uint32 `protobuf:"varint,3,opt,name=use_status,json=useStatus,proto3" json:"use_status,omitempty"` // 是否使用  UseStatus
}

func (x *CarInfoReq) Reset() {
	*x = CarInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarInfoReq) ProtoMessage() {}

func (x *CarInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarInfoReq.ProtoReflect.Descriptor instead.
func (*CarInfoReq) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{23}
}

func (x *CarInfoReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CarInfoReq) GetCarId() uint64 {
	if x != nil {
		return x.CarId
	}
	return 0
}

func (x *CarInfoReq) GetUseStatus() uint32 {
	if x != nil {
		return x.UseStatus
	}
	return 0
}

type ExchangeGoldReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId uint64 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"` // 商品id
}

func (x *ExchangeGoldReq) Reset() {
	*x = ExchangeGoldReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeGoldReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeGoldReq) ProtoMessage() {}

func (x *ExchangeGoldReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeGoldReq.ProtoReflect.Descriptor instead.
func (*ExchangeGoldReq) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{24}
}

func (x *ExchangeGoldReq) GetGoodsId() uint64 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

type GoodsListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsList []*GoodsItem `protobuf:"bytes,1,rep,name=goods_list,json=goodsList,proto3" json:"goods_list,omitempty"` // 商品列表
	IsOpen    bool         `protobuf:"varint,2,opt,name=is_open,json=isOpen,proto3" json:"is_open,omitempty"`         // 当前国家是否开放，客户端开关
}

func (x *GoodsListResp) Reset() {
	*x = GoodsListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsListResp) ProtoMessage() {}

func (x *GoodsListResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsListResp.ProtoReflect.Descriptor instead.
func (*GoodsListResp) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{25}
}

func (x *GoodsListResp) GetGoodsList() []*GoodsItem {
	if x != nil {
		return x.GoodsList
	}
	return nil
}

func (x *GoodsListResp) GetIsOpen() bool {
	if x != nil {
		return x.IsOpen
	}
	return false
}

type GoodsItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId    uint64 `protobuf:"varint,1,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`         // 商品id
	GoodsDesc  string `protobuf:"bytes,2,opt,name=goods_desc,json=goodsDesc,proto3" json:"goods_desc,omitempty"`    // 商品描述文案，如"100 coin"
	GoodsPrice string `protobuf:"bytes,3,opt,name=goods_price,json=goodsPrice,proto3" json:"goods_price,omitempty"` // 商品价格文案，如"2000 diamond"
}

func (x *GoodsItem) Reset() {
	*x = GoodsItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsItem) ProtoMessage() {}

func (x *GoodsItem) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsItem.ProtoReflect.Descriptor instead.
func (*GoodsItem) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{26}
}

func (x *GoodsItem) GetGoodsId() uint64 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *GoodsItem) GetGoodsDesc() string {
	if x != nil {
		return x.GoodsDesc
	}
	return ""
}

func (x *GoodsItem) GetGoodsPrice() string {
	if x != nil {
		return x.GoodsPrice
	}
	return ""
}

type AvatarInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                              // 目标用户id
	AvatarId  uint64 `protobuf:"varint,2,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`    // 更换的avatar_id
	UseStatus uint32 `protobuf:"varint,3,opt,name=use_status,json=useStatus,proto3" json:"use_status,omitempty"` // 是否使用  UseStatus
}

func (x *AvatarInfoReq) Reset() {
	*x = AvatarInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarInfoReq) ProtoMessage() {}

func (x *AvatarInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarInfoReq.ProtoReflect.Descriptor instead.
func (*AvatarInfoReq) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{27}
}

func (x *AvatarInfoReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AvatarInfoReq) GetAvatarId() uint64 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *AvatarInfoReq) GetUseStatus() uint32 {
	if x != nil {
		return x.UseStatus
	}
	return 0
}

type AvatarInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarId       uint64 `protobuf:"varint,1,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`                   // 头像框id
	AvatarName     string `protobuf:"bytes,2,opt,name=avatar_name,json=avatarName,proto3" json:"avatar_name,omitempty"`              // 头像框名称
	PreviewPicture string `protobuf:"bytes,3,opt,name=preview_picture,json=previewPicture,proto3" json:"preview_picture,omitempty"`  // 预览图
	DynamicPicture string `protobuf:"bytes,4,opt,name=dynamic_picture,json=dynamicPicture,proto3" json:"dynamic_picture,omitempty"`  // 动态图
	ValidityPeriod uint32 `protobuf:"varint,5,opt,name=validity_period,json=validityPeriod,proto3" json:"validity_period,omitempty"` // 有效天数
	AvatarPrice    uint32 `protobuf:"varint,6,opt,name=avatar_price,json=avatarPrice,proto3" json:"avatar_price,omitempty"`          // 头像框价格
	Deadline       uint64 `protobuf:"varint,7,opt,name=deadline,proto3" json:"deadline,omitempty"`                                   // 截止日期 (时间戳)
	UseStatus      uint32 `protobuf:"varint,8,opt,name=use_status,json=useStatus,proto3" json:"use_status,omitempty"`                // 是否正在使用 UseStatus
}

func (x *AvatarInfo) Reset() {
	*x = AvatarInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarInfo) ProtoMessage() {}

func (x *AvatarInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarInfo.ProtoReflect.Descriptor instead.
func (*AvatarInfo) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{28}
}

func (x *AvatarInfo) GetAvatarId() uint64 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *AvatarInfo) GetAvatarName() string {
	if x != nil {
		return x.AvatarName
	}
	return ""
}

func (x *AvatarInfo) GetPreviewPicture() string {
	if x != nil {
		return x.PreviewPicture
	}
	return ""
}

func (x *AvatarInfo) GetDynamicPicture() string {
	if x != nil {
		return x.DynamicPicture
	}
	return ""
}

func (x *AvatarInfo) GetValidityPeriod() uint32 {
	if x != nil {
		return x.ValidityPeriod
	}
	return 0
}

func (x *AvatarInfo) GetAvatarPrice() uint32 {
	if x != nil {
		return x.AvatarPrice
	}
	return 0
}

func (x *AvatarInfo) GetDeadline() uint64 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

func (x *AvatarInfo) GetUseStatus() uint32 {
	if x != nil {
		return x.UseStatus
	}
	return 0
}

type AvatarItemsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarList []*AvatarInfo `protobuf:"bytes,1,rep,name=avatar_list,json=avatarList,proto3" json:"avatar_list,omitempty"` // 头像框信息列表
}

func (x *AvatarItemsResp) Reset() {
	*x = AvatarItemsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarItemsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarItemsResp) ProtoMessage() {}

func (x *AvatarItemsResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarItemsResp.ProtoReflect.Descriptor instead.
func (*AvatarItemsResp) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{29}
}

func (x *AvatarItemsResp) GetAvatarList() []*AvatarInfo {
	if x != nil {
		return x.AvatarList
	}
	return nil
}

type VipInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                              // 目标用户id
	VipId     uint64 `protobuf:"varint,2,opt,name=vip_id,json=vipId,proto3" json:"vip_id,omitempty"`             // 购买的vip_id
	UseStatus uint32 `protobuf:"varint,3,opt,name=use_status,json=useStatus,proto3" json:"use_status,omitempty"` // 是否使用  UseStatus
}

func (x *VipInfoReq) Reset() {
	*x = VipInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipInfoReq) ProtoMessage() {}

func (x *VipInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipInfoReq.ProtoReflect.Descriptor instead.
func (*VipInfoReq) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{30}
}

func (x *VipInfoReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *VipInfoReq) GetVipId() uint64 {
	if x != nil {
		return x.VipId
	}
	return 0
}

func (x *VipInfoReq) GetUseStatus() uint32 {
	if x != nil {
		return x.UseStatus
	}
	return 0
}

type VipInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VipId          uint64 `protobuf:"varint,1,opt,name=vip_id,json=vipId,proto3" json:"vip_id,omitempty"`                            // vip id
	VipLevel       uint32 `protobuf:"varint,2,opt,name=vip_level,json=vipLevel,proto3" json:"vip_level,omitempty"`                   // vip 级别
	VipName        string `protobuf:"bytes,3,opt,name=vip_name,json=vipName,proto3" json:"vip_name,omitempty"`                       // vip 名称
	ValidityPeriod uint32 `protobuf:"varint,4,opt,name=validity_period,json=validityPeriod,proto3" json:"validity_period,omitempty"` // 有效天数
	VipPrice       uint32 `protobuf:"varint,5,opt,name=vip_price,json=vipPrice,proto3" json:"vip_price,omitempty"`                   // vip价格
	Deadline       uint64 `protobuf:"varint,6,opt,name=deadline,proto3" json:"deadline,omitempty"`                                   // 截止日期 (时间戳)
	MedalIcon      string `protobuf:"bytes,7,opt,name=medal_icon,json=medalIcon,proto3" json:"medal_icon,omitempty"`                 // 预览图
	MedalWebp      string `protobuf:"bytes,8,opt,name=medal_webp,json=medalWebp,proto3" json:"medal_webp,omitempty"`                 // 动态图
}

func (x *VipInfo) Reset() {
	*x = VipInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipInfo) ProtoMessage() {}

func (x *VipInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipInfo.ProtoReflect.Descriptor instead.
func (*VipInfo) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{31}
}

func (x *VipInfo) GetVipId() uint64 {
	if x != nil {
		return x.VipId
	}
	return 0
}

func (x *VipInfo) GetVipLevel() uint32 {
	if x != nil {
		return x.VipLevel
	}
	return 0
}

func (x *VipInfo) GetVipName() string {
	if x != nil {
		return x.VipName
	}
	return ""
}

func (x *VipInfo) GetValidityPeriod() uint32 {
	if x != nil {
		return x.ValidityPeriod
	}
	return 0
}

func (x *VipInfo) GetVipPrice() uint32 {
	if x != nil {
		return x.VipPrice
	}
	return 0
}

func (x *VipInfo) GetDeadline() uint64 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

func (x *VipInfo) GetMedalIcon() string {
	if x != nil {
		return x.MedalIcon
	}
	return ""
}

func (x *VipInfo) GetMedalWebp() string {
	if x != nil {
		return x.MedalWebp
	}
	return ""
}

type VipItemsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VipList []*VipInfo `protobuf:"bytes,1,rep,name=vip_list,json=vipList,proto3" json:"vip_list,omitempty"` // vip信息列表
}

func (x *VipItemsResp) Reset() {
	*x = VipItemsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipItemsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipItemsResp) ProtoMessage() {}

func (x *VipItemsResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipItemsResp.ProtoReflect.Descriptor instead.
func (*VipItemsResp) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{32}
}

func (x *VipItemsResp) GetVipList() []*VipInfo {
	if x != nil {
		return x.VipList
	}
	return nil
}

type BarrageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"` // 目标用户id
}

func (x *BarrageReq) Reset() {
	*x = BarrageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BarrageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarrageReq) ProtoMessage() {}

func (x *BarrageReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarrageReq.ProtoReflect.Descriptor instead.
func (*BarrageReq) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{33}
}

func (x *BarrageReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type BarrageRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num uint32 `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"` // 弹幕数
}

func (x *BarrageRsp) Reset() {
	*x = BarrageRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BarrageRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BarrageRsp) ProtoMessage() {}

func (x *BarrageRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BarrageRsp.ProtoReflect.Descriptor instead.
func (*BarrageRsp) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{34}
}

func (x *BarrageRsp) GetNum() uint32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type GetProfileGiftReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid      uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                           // 目标用户id
	Page     uint32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                         // 页号，从0开始
	PageSize uint32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 页大小
}

func (x *GetProfileGiftReq) Reset() {
	*x = GetProfileGiftReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfileGiftReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfileGiftReq) ProtoMessage() {}

func (x *GetProfileGiftReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfileGiftReq.ProtoReflect.Descriptor instead.
func (*GetProfileGiftReq) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{35}
}

func (x *GetProfileGiftReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetProfileGiftReq) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetProfileGiftReq) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type BackGroundInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                              // 目标用户id
	Id        uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`                                // 背景id
	UseStatus uint32 `protobuf:"varint,3,opt,name=use_status,json=useStatus,proto3" json:"use_status,omitempty"` // 是否使用
}

func (x *BackGroundInfoReq) Reset() {
	*x = BackGroundInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackGroundInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackGroundInfoReq) ProtoMessage() {}

func (x *BackGroundInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackGroundInfoReq.ProtoReflect.Descriptor instead.
func (*BackGroundInfoReq) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{36}
}

func (x *BackGroundInfoReq) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *BackGroundInfoReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BackGroundInfoReq) GetUseStatus() uint32 {
	if x != nil {
		return x.UseStatus
	}
	return 0
}

type BackGroundInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance    *BalanceResp    `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Background *BackGroundInfo `protobuf:"bytes,2,opt,name=background,proto3" json:"background,omitempty"`
}

func (x *BackGroundInfoResp) Reset() {
	*x = BackGroundInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackGroundInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackGroundInfoResp) ProtoMessage() {}

func (x *BackGroundInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackGroundInfoResp.ProtoReflect.Descriptor instead.
func (*BackGroundInfoResp) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{37}
}

func (x *BackGroundInfoResp) GetBalance() *BalanceResp {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *BackGroundInfoResp) GetBackground() *BackGroundInfo {
	if x != nil {
		return x.Background
	}
	return nil
}

type BackGroundInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` // 头像框id
	Background       string `protobuf:"bytes,2,opt,name=background,proto3" json:"background,omitempty"`
	BackgroundSquare string `protobuf:"bytes,3,opt,name=background_square,json=backgroundSquare,proto3" json:"background_square,omitempty"`
	BackgroundThumb  string `protobuf:"bytes,4,opt,name=background_thumb,json=backgroundThumb,proto3" json:"background_thumb,omitempty"`
	ValidityPeriod   uint32 `protobuf:"varint,5,opt,name=validity_period,json=validityPeriod,proto3" json:"validity_period,omitempty"`
	BackgroundType   uint32 `protobuf:"varint,6,opt,name=background_type,json=backgroundType,proto3" json:"background_type,omitempty"`
	Price            uint32 `protobuf:"varint,7,opt,name=price,proto3" json:"price,omitempty"`
	Deadline         uint64 `protobuf:"varint,8,opt,name=deadline,proto3" json:"deadline,omitempty"`
	UseStatus        uint32 `protobuf:"varint,9,opt,name=use_status,json=useStatus,proto3" json:"use_status,omitempty"`
}

func (x *BackGroundInfo) Reset() {
	*x = BackGroundInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackGroundInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackGroundInfo) ProtoMessage() {}

func (x *BackGroundInfo) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackGroundInfo.ProtoReflect.Descriptor instead.
func (*BackGroundInfo) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{38}
}

func (x *BackGroundInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BackGroundInfo) GetBackground() string {
	if x != nil {
		return x.Background
	}
	return ""
}

func (x *BackGroundInfo) GetBackgroundSquare() string {
	if x != nil {
		return x.BackgroundSquare
	}
	return ""
}

func (x *BackGroundInfo) GetBackgroundThumb() string {
	if x != nil {
		return x.BackgroundThumb
	}
	return ""
}

func (x *BackGroundInfo) GetValidityPeriod() uint32 {
	if x != nil {
		return x.ValidityPeriod
	}
	return 0
}

func (x *BackGroundInfo) GetBackgroundType() uint32 {
	if x != nil {
		return x.BackgroundType
	}
	return 0
}

func (x *BackGroundInfo) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *BackGroundInfo) GetDeadline() uint64 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

func (x *BackGroundInfo) GetUseStatus() uint32 {
	if x != nil {
		return x.UseStatus
	}
	return 0
}

type BackGroundItemsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BgList []*BackGroundInfo `protobuf:"bytes,1,rep,name=bg_list,json=bgList,proto3" json:"bg_list,omitempty"` // 头像框信息列表
}

func (x *BackGroundItemsResp) Reset() {
	*x = BackGroundItemsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackGroundItemsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackGroundItemsResp) ProtoMessage() {}

func (x *BackGroundItemsResp) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackGroundItemsResp.ProtoReflect.Descriptor instead.
func (*BackGroundItemsResp) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{39}
}

func (x *BackGroundItemsResp) GetBgList() []*BackGroundInfo {
	if x != nil {
		return x.BgList
	}
	return nil
}

type UserPrivacy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HiddenCountry   bool `protobuf:"varint,1,opt,name=hidden_country,json=hiddenCountry,proto3" json:"hidden_country,omitempty"`
	HiddenLoginTime bool `protobuf:"varint,2,opt,name=hidden_login_time,json=hiddenLoginTime,proto3" json:"hidden_login_time,omitempty"`
}

func (x *UserPrivacy) Reset() {
	*x = UserPrivacy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPrivacy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPrivacy) ProtoMessage() {}

func (x *UserPrivacy) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPrivacy.ProtoReflect.Descriptor instead.
func (*UserPrivacy) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{40}
}

func (x *UserPrivacy) GetHiddenCountry() bool {
	if x != nil {
		return x.HiddenCountry
	}
	return false
}

func (x *UserPrivacy) GetHiddenLoginTime() bool {
	if x != nil {
		return x.HiddenLoginTime
	}
	return false
}

type UserPrivacyUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserPrivacy *UserPrivacy `protobuf:"bytes,1,opt,name=user_privacy,json=userPrivacy,proto3" json:"user_privacy,omitempty"`
}

func (x *UserPrivacyUpdateReq) Reset() {
	*x = UserPrivacyUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPrivacyUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPrivacyUpdateReq) ProtoMessage() {}

func (x *UserPrivacyUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPrivacyUpdateReq.ProtoReflect.Descriptor instead.
func (*UserPrivacyUpdateReq) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{41}
}

func (x *UserPrivacyUpdateReq) GetUserPrivacy() *UserPrivacy {
	if x != nil {
		return x.UserPrivacy
	}
	return nil
}

type UserPrivacyRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserPrivacy *UserPrivacy `protobuf:"bytes,1,opt,name=user_privacy,json=userPrivacy,proto3" json:"user_privacy,omitempty"`
}

func (x *UserPrivacyRsp) Reset() {
	*x = UserPrivacyRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_info_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPrivacyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPrivacyRsp) ProtoMessage() {}

func (x *UserPrivacyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_user_info_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPrivacyRsp.ProtoReflect.Descriptor instead.
func (*UserPrivacyRsp) Descriptor() ([]byte, []int) {
	return file_user_info_proto_rawDescGZIP(), []int{42}
}

func (x *UserPrivacyRsp) GetUserPrivacy() *UserPrivacy {
	if x != nil {
		return x.UserPrivacy
	}
	return nil
}

var File_user_info_proto protoreflect.FileDescriptor

var file_user_info_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x76, 0x0a, 0x12,
	0x56, 0x69, 0x70, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3e, 0x0a, 0x11, 0x56, 0x69, 0x70, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7a, 0x0a, 0x0e, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x75, 0x79, 0x56, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x76, 0x69, 0x70, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x76,
	0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x30, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x22, 0x44, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x1f,
	0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22,
	0x59, 0x0a, 0x09, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x65, 0x78, 0x70, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6e, 0x65,
	0x78, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x45, 0x78, 0x70, 0x22, 0xf6, 0x03, 0x0a, 0x0c, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x67,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x57, 0x61, 0x6c, 0x6c, 0x12,
	0x19, 0x0a, 0x08, 0x75, 0x69, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x75, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69,
	0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x76,
	0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x40, 0x0a, 0x11, 0x77, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x77, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x73, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x73, 0x12,
	0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x73,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x0b, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x22, 0xa4, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x57, 0x61, 0x6c, 0x6c, 0x22, 0x5a, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x22, 0x58, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0x87, 0x02, 0x0a, 0x0a, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x76, 0x69, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x76, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x40, 0x0a, 0x11, 0x77, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x77, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x65, 0x0a, 0x10, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x32,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x3c, 0x0a, 0x09, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x6d, 0x64,
	0x22, 0x3f, 0x0a, 0x0c, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x6d,
	0x64, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x7e, 0x0a, 0x13, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x61, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x64,
	0x64, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x62, 0x75, 0x64, 0x64, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x0b, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x47, 0x6f, 0x6c, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44,
	0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64, 0x22,
	0x8e, 0x02, 0x0a, 0x07, 0x43, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x63,
	0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x61, 0x72,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61, 0x72,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x3d, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2d, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x43,
	0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xfb, 0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x08, 0x63, 0x61, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x54, 0x0a,
	0x0a, 0x43, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x63, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63,
	0x61, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x2c, 0x0a, 0x0f, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x47,
	0x6f, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49,
	0x64, 0x22, 0x5d, 0x0a, 0x0d, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x09, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6f, 0x70,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e,
	0x22, 0x66, 0x0a, 0x09, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x5d, 0x0a, 0x0d, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa3, 0x02, 0x0a, 0x0a, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x75, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x49, 0x0a,
	0x0f, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x36, 0x0a, 0x0b, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x0a, 0x56, 0x69, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x69, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x69, 0x70, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xf8,
	0x01, 0x0a, 0x07, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x69,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x69, 0x70, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x76, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x19,
	0x0a, 0x08, 0x76, 0x69, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x76, 0x69, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x65, 0x64, 0x61, 0x6c, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x65, 0x64, 0x61, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65,
	0x64, 0x61, 0x6c, 0x5f, 0x77, 0x65, 0x62, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x65, 0x64, 0x61, 0x6c, 0x57, 0x65, 0x62, 0x70, 0x22, 0x3d, 0x0a, 0x0c, 0x56, 0x69, 0x70,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x08, 0x76, 0x69, 0x70,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x07, 0x76, 0x69, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x1e, 0x0a, 0x0a, 0x42, 0x61, 0x72, 0x72,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x0a, 0x42, 0x61, 0x72, 0x72,
	0x61, 0x67, 0x65, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x56, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x54, 0x0a, 0x11, 0x42, 0x61, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x12, 0x42, 0x61, 0x63, 0x6b, 0x47,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x42, 0x61, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0xbb, 0x02, 0x0a, 0x0e, 0x42,
	0x61, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x2b, 0x0a,
	0x11, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x71, 0x75, 0x61,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x54, 0x68, 0x75, 0x6d, 0x62, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74,
	0x79, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x49, 0x0a, 0x13, 0x42, 0x61, 0x63, 0x6b,
	0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x32, 0x0a, 0x07, 0x62, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x61, 0x63,
	0x6b, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x62, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x60, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x63, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x52, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x22, 0x4b, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x52, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x63, 0x79, 0x2a, 0x2b, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12,
	0x0c, 0x0a, 0x08, 0x6b, 0x55, 0x6e, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x13, 0x0a,
	0x0f, 0x6b, 0x56, 0x69, 0x70, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x69, 0x6e,
	0x10, 0x01, 0x2a, 0x32, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x0c, 0x0a, 0x08, 0x6b, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x6b, 0x46, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x6b,
	0x4d, 0x61, 0x6c, 0x65, 0x10, 0x02, 0x2a, 0x32, 0x0a, 0x07, 0x55, 0x69, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0d, 0x0a, 0x09, 0x6b, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x6b, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x6b, 0x50, 0x75, 0x73, 0x68, 0x10, 0x02, 0x2a, 0x3d, 0x0a, 0x0c, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x6b, 0x4e,
	0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x6b, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x6b, 0x46, 0x61, 0x6e, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x6b, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x10, 0x03, 0x2a, 0x37, 0x0a, 0x09, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x6b, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x42, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x10, 0x02, 0x2a, 0x34, 0x0a, 0x0b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6d,
	0x64, 0x12, 0x10, 0x0a, 0x0c, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64,
	0x64, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x6b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x10, 0x01, 0x2a, 0x37, 0x0a, 0x0c, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6d, 0x64, 0x12, 0x11, 0x0a, 0x0d, 0x6b, 0x42, 0x6c, 0x61,
	0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x64, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x6b,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x10,
	0x01, 0x2a, 0x21, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0a,
	0x0a, 0x06, 0x6b, 0x4e, 0x6f, 0x55, 0x73, 0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x6b, 0x55,
	0x73, 0x65, 0x10, 0x01, 0x32, 0xb8, 0x0f, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0c, 0x49, 0x6e, 0x69, 0x74,
	0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x1a, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x41, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1e,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30,
	0x0a, 0x06, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x10,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x36, 0x0a, 0x09, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x16,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0c, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x47, 0x6f, 0x6c, 0x64, 0x12, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x47, 0x6f, 0x6c,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0a, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x75, 0x79, 0x43, 0x61, 0x72, 0x12, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x17,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x61, 0x72, 0x12, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x41, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x42, 0x75, 0x79, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x10, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x18, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x75, 0x79, 0x56, 0x69, 0x70, 0x12, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x75, 0x79, 0x56, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x56, 0x69, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x56, 0x69, 0x70, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0e, 0x56, 0x69, 0x70, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x1c, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x56, 0x69, 0x70, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x56, 0x69, 0x70, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x56, 0x69, 0x70, 0x47, 0x69, 0x66, 0x74, 0x12, 0x15, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x14, 0x56, 0x69, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x16, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x12, 0x15, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x42,
	0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x52, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x11, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x75, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1c,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x47,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x47, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x12, 0x16, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x52, 0x73, 0x70, 0x12, 0x4f,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x52, 0x73, 0x70, 0x42,
	0x0e, 0x5a, 0x07, 0x67, 0x72, 0x70, 0x63, 0x6c, 0x69, 0x62, 0xa2, 0x02, 0x02, 0x50, 0x42, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_info_proto_rawDescOnce sync.Once
	file_user_info_proto_rawDescData = file_user_info_proto_rawDesc
)

func file_user_info_proto_rawDescGZIP() []byte {
	file_user_info_proto_rawDescOnce.Do(func() {
		file_user_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_info_proto_rawDescData)
	})
	return file_user_info_proto_rawDescData
}

var file_user_info_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_user_info_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_user_info_proto_goTypes = []interface{}{
	(TaskId)(0),                  // 0: user_info.TaskId
	(UserGender)(0),              // 1: user_info.UserGender
	(UidType)(0),                 // 2: user_info.UidType
	(RelationType)(0),            // 3: user_info.RelationType
	(BlockType)(0),               // 4: user_info.BlockType
	(RelationCmd)(0),             // 5: user_info.RelationCmd
	(BlacklistCmd)(0),            // 6: user_info.BlacklistCmd
	(UseStatus)(0),               // 7: user_info.UseStatus
	(*VipReceiveCoinResp)(nil),   // 8: user_info.VipReceiveCoinResp
	(*VipReceiveCoinReq)(nil),    // 9: user_info.VipReceiveCoinReq
	(*ReceiveResp)(nil),          // 10: user_info.ReceiveResp
	(*UserBuyVipResp)(nil),       // 11: user_info.UserBuyVipResp
	(*SearchUserReq)(nil),        // 12: user_info.SearchUserReq
	(*SearchUserResp)(nil),       // 13: user_info.SearchUserResp
	(*UserInfoReq)(nil),          // 14: user_info.UserInfoReq
	(*LevelInfo)(nil),            // 15: user_info.LevelInfo
	(*UserInfoResp)(nil),         // 16: user_info.UserInfoResp
	(*BaseInfoReq)(nil),          // 17: user_info.BaseInfoReq
	(*UpdateUserInfoReq)(nil),    // 18: user_info.UpdateUserInfoReq
	(*GetUserRelationResp)(nil),  // 19: user_info.GetUserRelationResp
	(*UserRelationReq)(nil),      // 20: user_info.UserRelationReq
	(*SimpleUser)(nil),           // 21: user_info.SimpleUser
	(*UserRelationResp)(nil),     // 22: user_info.UserRelationResp
	(*FollowReq)(nil),            // 23: user_info.FollowReq
	(*BlacklistReq)(nil),         // 24: user_info.BlacklistReq
	(*Empty)(nil),                // 25: user_info.Empty
	(*RelationCounterResp)(nil),  // 26: user_info.RelationCounterResp
	(*BalanceResp)(nil),          // 27: user_info.BalanceResp
	(*CarInfo)(nil),              // 28: user_info.CarInfo
	(*CarItemsResp)(nil),         // 29: user_info.CarItemsResp
	(*UserProfileResp)(nil),      // 30: user_info.UserProfileResp
	(*CarInfoReq)(nil),           // 31: user_info.CarInfoReq
	(*ExchangeGoldReq)(nil),      // 32: user_info.ExchangeGoldReq
	(*GoodsListResp)(nil),        // 33: user_info.GoodsListResp
	(*GoodsItem)(nil),            // 34: user_info.GoodsItem
	(*AvatarInfoReq)(nil),        // 35: user_info.AvatarInfoReq
	(*AvatarInfo)(nil),           // 36: user_info.AvatarInfo
	(*AvatarItemsResp)(nil),      // 37: user_info.AvatarItemsResp
	(*VipInfoReq)(nil),           // 38: user_info.VipInfoReq
	(*VipInfo)(nil),              // 39: user_info.VipInfo
	(*VipItemsResp)(nil),         // 40: user_info.VipItemsResp
	(*BarrageReq)(nil),           // 41: user_info.BarrageReq
	(*BarrageRsp)(nil),           // 42: user_info.BarrageRsp
	(*GetProfileGiftReq)(nil),    // 43: user_info.GetProfileGiftReq
	(*BackGroundInfoReq)(nil),    // 44: user_info.BackGroundInfoReq
	(*BackGroundInfoResp)(nil),   // 45: user_info.BackGroundInfoResp
	(*BackGroundInfo)(nil),       // 46: user_info.BackGroundInfo
	(*BackGroundItemsResp)(nil),  // 47: user_info.BackGroundItemsResp
	(*UserPrivacy)(nil),          // 48: user_info.UserPrivacy
	(*UserPrivacyUpdateReq)(nil), // 49: user_info.UserPrivacyUpdateReq
	(*UserPrivacyRsp)(nil),       // 50: user_info.UserPrivacyRsp
}
var file_user_info_proto_depIdxs = []int32{
	27, // 0: user_info.VipReceiveCoinResp.user_balance:type_name -> user_info.BalanceResp
	27, // 1: user_info.UserBuyVipResp.user_balance:type_name -> user_info.BalanceResp
	39, // 2: user_info.UserBuyVipResp.vip_info:type_name -> user_info.VipInfo
	21, // 3: user_info.SearchUserResp.user_list:type_name -> user_info.SimpleUser
	15, // 4: user_info.UserInfoResp.wealth_level_info:type_name -> user_info.LevelInfo
	15, // 5: user_info.SimpleUser.wealth_level_info:type_name -> user_info.LevelInfo
	21, // 6: user_info.UserRelationResp.user_list:type_name -> user_info.SimpleUser
	28, // 7: user_info.CarItemsResp.car_list:type_name -> user_info.CarInfo
	16, // 8: user_info.UserProfileResp.user_info:type_name -> user_info.UserInfoResp
	27, // 9: user_info.UserProfileResp.user_balance:type_name -> user_info.BalanceResp
	26, // 10: user_info.UserProfileResp.user_counter:type_name -> user_info.RelationCounterResp
	29, // 11: user_info.UserProfileResp.car_items:type_name -> user_info.CarItemsResp
	34, // 12: user_info.GoodsListResp.goods_list:type_name -> user_info.GoodsItem
	36, // 13: user_info.AvatarItemsResp.avatar_list:type_name -> user_info.AvatarInfo
	39, // 14: user_info.VipItemsResp.vip_list:type_name -> user_info.VipInfo
	27, // 15: user_info.BackGroundInfoResp.balance:type_name -> user_info.BalanceResp
	46, // 16: user_info.BackGroundInfoResp.background:type_name -> user_info.BackGroundInfo
	46, // 17: user_info.BackGroundItemsResp.bg_list:type_name -> user_info.BackGroundInfo
	48, // 18: user_info.UserPrivacyUpdateReq.user_privacy:type_name -> user_info.UserPrivacy
	48, // 19: user_info.UserPrivacyRsp.user_privacy:type_name -> user_info.UserPrivacy
	14, // 20: user_info.UserInfoService.GetUserInfo:input_type -> user_info.UserInfoReq
	17, // 21: user_info.UserInfoService.InitBaseInfo:input_type -> user_info.BaseInfoReq
	18, // 22: user_info.UserInfoService.UpdateUserInfo:input_type -> user_info.UpdateUserInfoReq
	12, // 23: user_info.UserInfoService.SearchUser:input_type -> user_info.SearchUserReq
	14, // 24: user_info.UserInfoService.GetUserProfile:input_type -> user_info.UserInfoReq
	20, // 25: user_info.UserInfoService.GetRelation:input_type -> user_info.UserRelationReq
	14, // 26: user_info.UserInfoService.GetUserRelation:input_type -> user_info.UserInfoReq
	23, // 27: user_info.UserInfoService.Follow:input_type -> user_info.FollowReq
	24, // 28: user_info.UserInfoService.Blacklist:input_type -> user_info.BlacklistReq
	14, // 29: user_info.UserInfoService.GetRelationCounter:input_type -> user_info.UserInfoReq
	14, // 30: user_info.UserInfoService.GetGoodsList:input_type -> user_info.UserInfoReq
	32, // 31: user_info.UserInfoService.ExchangeGold:input_type -> user_info.ExchangeGoldReq
	14, // 32: user_info.UserInfoService.GetBalance:input_type -> user_info.UserInfoReq
	31, // 33: user_info.UserInfoService.UserBuyCar:input_type -> user_info.CarInfoReq
	14, // 34: user_info.UserInfoService.GetCarItems:input_type -> user_info.UserInfoReq
	31, // 35: user_info.UserInfoService.UserChangeCar:input_type -> user_info.CarInfoReq
	35, // 36: user_info.UserInfoService.UserBuyAvatar:input_type -> user_info.AvatarInfoReq
	14, // 37: user_info.UserInfoService.GetAvatarList:input_type -> user_info.UserInfoReq
	35, // 38: user_info.UserInfoService.UserChangeAvatar:input_type -> user_info.AvatarInfoReq
	38, // 39: user_info.UserInfoService.UserBuyVip:input_type -> user_info.VipInfoReq
	14, // 40: user_info.UserInfoService.GetVipList:input_type -> user_info.UserInfoReq
	9,  // 41: user_info.UserInfoService.VipReceiveCoin:input_type -> user_info.VipReceiveCoinReq
	38, // 42: user_info.UserInfoService.UserChangeVipGift:input_type -> user_info.VipInfoReq
	14, // 43: user_info.UserInfoService.VipUserIsReceiveCoin:input_type -> user_info.UserInfoReq
	41, // 44: user_info.UserInfoService.GetBarrage:input_type -> user_info.BarrageReq
	44, // 45: user_info.UserInfoService.UserBuyBackground:input_type -> user_info.BackGroundInfoReq
	14, // 46: user_info.UserInfoService.GetBackGroundItems:input_type -> user_info.UserInfoReq
	14, // 47: user_info.UserInfoService.GetUserPrivacy:input_type -> user_info.UserInfoReq
	49, // 48: user_info.UserInfoService.UpdateUserPrivacy:input_type -> user_info.UserPrivacyUpdateReq
	16, // 49: user_info.UserInfoService.GetUserInfo:output_type -> user_info.UserInfoResp
	16, // 50: user_info.UserInfoService.InitBaseInfo:output_type -> user_info.UserInfoResp
	16, // 51: user_info.UserInfoService.UpdateUserInfo:output_type -> user_info.UserInfoResp
	13, // 52: user_info.UserInfoService.SearchUser:output_type -> user_info.SearchUserResp
	30, // 53: user_info.UserInfoService.GetUserProfile:output_type -> user_info.UserProfileResp
	22, // 54: user_info.UserInfoService.GetRelation:output_type -> user_info.UserRelationResp
	19, // 55: user_info.UserInfoService.GetUserRelation:output_type -> user_info.GetUserRelationResp
	25, // 56: user_info.UserInfoService.Follow:output_type -> user_info.Empty
	25, // 57: user_info.UserInfoService.Blacklist:output_type -> user_info.Empty
	26, // 58: user_info.UserInfoService.GetRelationCounter:output_type -> user_info.RelationCounterResp
	33, // 59: user_info.UserInfoService.GetGoodsList:output_type -> user_info.GoodsListResp
	27, // 60: user_info.UserInfoService.ExchangeGold:output_type -> user_info.BalanceResp
	27, // 61: user_info.UserInfoService.GetBalance:output_type -> user_info.BalanceResp
	27, // 62: user_info.UserInfoService.UserBuyCar:output_type -> user_info.BalanceResp
	29, // 63: user_info.UserInfoService.GetCarItems:output_type -> user_info.CarItemsResp
	25, // 64: user_info.UserInfoService.UserChangeCar:output_type -> user_info.Empty
	27, // 65: user_info.UserInfoService.UserBuyAvatar:output_type -> user_info.BalanceResp
	37, // 66: user_info.UserInfoService.GetAvatarList:output_type -> user_info.AvatarItemsResp
	25, // 67: user_info.UserInfoService.UserChangeAvatar:output_type -> user_info.Empty
	11, // 68: user_info.UserInfoService.UserBuyVip:output_type -> user_info.UserBuyVipResp
	40, // 69: user_info.UserInfoService.GetVipList:output_type -> user_info.VipItemsResp
	8,  // 70: user_info.UserInfoService.VipReceiveCoin:output_type -> user_info.VipReceiveCoinResp
	25, // 71: user_info.UserInfoService.UserChangeVipGift:output_type -> user_info.Empty
	10, // 72: user_info.UserInfoService.VipUserIsReceiveCoin:output_type -> user_info.ReceiveResp
	42, // 73: user_info.UserInfoService.GetBarrage:output_type -> user_info.BarrageRsp
	45, // 74: user_info.UserInfoService.UserBuyBackground:output_type -> user_info.BackGroundInfoResp
	47, // 75: user_info.UserInfoService.GetBackGroundItems:output_type -> user_info.BackGroundItemsResp
	50, // 76: user_info.UserInfoService.GetUserPrivacy:output_type -> user_info.UserPrivacyRsp
	50, // 77: user_info.UserInfoService.UpdateUserPrivacy:output_type -> user_info.UserPrivacyRsp
	49, // [49:78] is the sub-list for method output_type
	20, // [20:49] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_user_info_proto_init() }
func file_user_info_proto_init() {
	if File_user_info_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipReceiveCoinResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipReceiveCoinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBuyVipResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRelationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRelationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlacklistReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationCounterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarItemsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProfileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeGoldReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarItemsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipItemsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BarrageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BarrageRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfileGiftReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackGroundInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackGroundInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackGroundInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackGroundItemsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPrivacy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPrivacyUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_info_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPrivacyRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_info_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_info_proto_goTypes,
		DependencyIndexes: file_user_info_proto_depIdxs,
		EnumInfos:         file_user_info_proto_enumTypes,
		MessageInfos:      file_user_info_proto_msgTypes,
	}.Build()
	File_user_info_proto = out.File
	file_user_info_proto_rawDesc = nil
	file_user_info_proto_goTypes = nil
	file_user_info_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserInfoServiceClient is the client API for UserInfoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserInfoServiceClient interface {
	// 用户资料接口
	//
	// 获取用户资料
	GetUserInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoResp, error)
	// 初始化用户资料，注册时调用
	InitBaseInfo(ctx context.Context, in *BaseInfoReq, opts ...grpc.CallOption) (*UserInfoResp, error)
	// 修改用户资料
	UpdateUserInfo(ctx context.Context, in *UpdateUserInfoReq, opts ...grpc.CallOption) (*UserInfoResp, error)
	// 搜索用户，当前只支持按照id查找
	SearchUser(ctx context.Context, in *SearchUserReq, opts ...grpc.CallOption) (*SearchUserResp, error)
	// 用户profile，聚合接口
	GetUserProfile(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserProfileResp, error)
	// 用户follow关系服务，好友关系不在这里
	//
	// 按页拉取用户关系列表
	GetRelation(ctx context.Context, in *UserRelationReq, opts ...grpc.CallOption) (*UserRelationResp, error)
	//  获得对应人的关系
	GetUserRelation(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*GetUserRelationResp, error)
	// 关注和取消关注接口
	Follow(ctx context.Context, in *FollowReq, opts ...grpc.CallOption) (*Empty, error)
	// 拉黑和取消拉黑接口
	Blacklist(ctx context.Context, in *BlacklistReq, opts ...grpc.CallOption) (*Empty, error)
	// 获取用户粉丝数和关注数
	GetRelationCounter(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*RelationCounterResp, error)
	// 用户金币钻石接口
	//
	// 获取钻石兑换金币商品列表
	GetGoodsList(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*GoodsListResp, error)
	// 钻石兑换成金币
	ExchangeGold(ctx context.Context, in *ExchangeGoldReq, opts ...grpc.CallOption) (*BalanceResp, error)
	// 获取余额
	GetBalance(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*BalanceResp, error)
	// 用户虚拟商品接口
	//
	//用户购买座驾
	UserBuyCar(ctx context.Context, in *CarInfoReq, opts ...grpc.CallOption) (*BalanceResp, error)
	// 获取用户拥有的座驾
	GetCarItems(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*CarItemsResp, error)
	//用户更换座驾
	UserChangeCar(ctx context.Context, in *CarInfoReq, opts ...grpc.CallOption) (*Empty, error)
	//用户购买头相框
	UserBuyAvatar(ctx context.Context, in *AvatarInfoReq, opts ...grpc.CallOption) (*BalanceResp, error)
	// 获取用户拥有的头相框
	GetAvatarList(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*AvatarItemsResp, error)
	//用户更换头相框
	UserChangeAvatar(ctx context.Context, in *AvatarInfoReq, opts ...grpc.CallOption) (*Empty, error)
	//用户购买vip
	UserBuyVip(ctx context.Context, in *VipInfoReq, opts ...grpc.CallOption) (*UserBuyVipResp, error)
	// 获取用户拥有的vip
	GetVipList(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*VipItemsResp, error)
	// vip领取接口
	VipReceiveCoin(ctx context.Context, in *VipReceiveCoinReq, opts ...grpc.CallOption) (*VipReceiveCoinResp, error)
	//Vip用户使用座驾及头像框
	UserChangeVipGift(ctx context.Context, in *VipInfoReq, opts ...grpc.CallOption) (*Empty, error)
	//vip用户是否领取金币
	VipUserIsReceiveCoin(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*ReceiveResp, error)
	// 获取弹幕数
	GetBarrage(ctx context.Context, in *BarrageReq, opts ...grpc.CallOption) (*BarrageRsp, error)
	//背景
	UserBuyBackground(ctx context.Context, in *BackGroundInfoReq, opts ...grpc.CallOption) (*BackGroundInfoResp, error)
	GetBackGroundItems(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*BackGroundItemsResp, error)
	GetUserPrivacy(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserPrivacyRsp, error)
	UpdateUserPrivacy(ctx context.Context, in *UserPrivacyUpdateReq, opts ...grpc.CallOption) (*UserPrivacyRsp, error)
}

type userInfoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserInfoServiceClient(cc grpc.ClientConnInterface) UserInfoServiceClient {
	return &userInfoServiceClient{cc}
}

func (c *userInfoServiceClient) GetUserInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoResp, error) {
	out := new(UserInfoResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/GetUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) InitBaseInfo(ctx context.Context, in *BaseInfoReq, opts ...grpc.CallOption) (*UserInfoResp, error) {
	out := new(UserInfoResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/InitBaseInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) UpdateUserInfo(ctx context.Context, in *UpdateUserInfoReq, opts ...grpc.CallOption) (*UserInfoResp, error) {
	out := new(UserInfoResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/UpdateUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) SearchUser(ctx context.Context, in *SearchUserReq, opts ...grpc.CallOption) (*SearchUserResp, error) {
	out := new(SearchUserResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/SearchUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) GetUserProfile(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserProfileResp, error) {
	out := new(UserProfileResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/GetUserProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) GetRelation(ctx context.Context, in *UserRelationReq, opts ...grpc.CallOption) (*UserRelationResp, error) {
	out := new(UserRelationResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/GetRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) GetUserRelation(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*GetUserRelationResp, error) {
	out := new(GetUserRelationResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/GetUserRelation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) Follow(ctx context.Context, in *FollowReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/Follow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) Blacklist(ctx context.Context, in *BlacklistReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/Blacklist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) GetRelationCounter(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*RelationCounterResp, error) {
	out := new(RelationCounterResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/GetRelationCounter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) GetGoodsList(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*GoodsListResp, error) {
	out := new(GoodsListResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/GetGoodsList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) ExchangeGold(ctx context.Context, in *ExchangeGoldReq, opts ...grpc.CallOption) (*BalanceResp, error) {
	out := new(BalanceResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/ExchangeGold", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) GetBalance(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*BalanceResp, error) {
	out := new(BalanceResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) UserBuyCar(ctx context.Context, in *CarInfoReq, opts ...grpc.CallOption) (*BalanceResp, error) {
	out := new(BalanceResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/UserBuyCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) GetCarItems(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*CarItemsResp, error) {
	out := new(CarItemsResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/GetCarItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) UserChangeCar(ctx context.Context, in *CarInfoReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/UserChangeCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) UserBuyAvatar(ctx context.Context, in *AvatarInfoReq, opts ...grpc.CallOption) (*BalanceResp, error) {
	out := new(BalanceResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/UserBuyAvatar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) GetAvatarList(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*AvatarItemsResp, error) {
	out := new(AvatarItemsResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/GetAvatarList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) UserChangeAvatar(ctx context.Context, in *AvatarInfoReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/UserChangeAvatar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) UserBuyVip(ctx context.Context, in *VipInfoReq, opts ...grpc.CallOption) (*UserBuyVipResp, error) {
	out := new(UserBuyVipResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/UserBuyVip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) GetVipList(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*VipItemsResp, error) {
	out := new(VipItemsResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/GetVipList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) VipReceiveCoin(ctx context.Context, in *VipReceiveCoinReq, opts ...grpc.CallOption) (*VipReceiveCoinResp, error) {
	out := new(VipReceiveCoinResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/VipReceiveCoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) UserChangeVipGift(ctx context.Context, in *VipInfoReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/UserChangeVipGift", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) VipUserIsReceiveCoin(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*ReceiveResp, error) {
	out := new(ReceiveResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/VipUserIsReceiveCoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) GetBarrage(ctx context.Context, in *BarrageReq, opts ...grpc.CallOption) (*BarrageRsp, error) {
	out := new(BarrageRsp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/GetBarrage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) UserBuyBackground(ctx context.Context, in *BackGroundInfoReq, opts ...grpc.CallOption) (*BackGroundInfoResp, error) {
	out := new(BackGroundInfoResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/UserBuyBackground", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) GetBackGroundItems(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*BackGroundItemsResp, error) {
	out := new(BackGroundItemsResp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/GetBackGroundItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) GetUserPrivacy(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserPrivacyRsp, error) {
	out := new(UserPrivacyRsp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/GetUserPrivacy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userInfoServiceClient) UpdateUserPrivacy(ctx context.Context, in *UserPrivacyUpdateReq, opts ...grpc.CallOption) (*UserPrivacyRsp, error) {
	out := new(UserPrivacyRsp)
	err := c.cc.Invoke(ctx, "/user_info.UserInfoService/UpdateUserPrivacy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserInfoServiceServer is the server API for UserInfoService service.
type UserInfoServiceServer interface {
	// 用户资料接口
	//
	// 获取用户资料
	GetUserInfo(context.Context, *UserInfoReq) (*UserInfoResp, error)
	// 初始化用户资料，注册时调用
	InitBaseInfo(context.Context, *BaseInfoReq) (*UserInfoResp, error)
	// 修改用户资料
	UpdateUserInfo(context.Context, *UpdateUserInfoReq) (*UserInfoResp, error)
	// 搜索用户，当前只支持按照id查找
	SearchUser(context.Context, *SearchUserReq) (*SearchUserResp, error)
	// 用户profile，聚合接口
	GetUserProfile(context.Context, *UserInfoReq) (*UserProfileResp, error)
	// 用户follow关系服务，好友关系不在这里
	//
	// 按页拉取用户关系列表
	GetRelation(context.Context, *UserRelationReq) (*UserRelationResp, error)
	//  获得对应人的关系
	GetUserRelation(context.Context, *UserInfoReq) (*GetUserRelationResp, error)
	// 关注和取消关注接口
	Follow(context.Context, *FollowReq) (*Empty, error)
	// 拉黑和取消拉黑接口
	Blacklist(context.Context, *BlacklistReq) (*Empty, error)
	// 获取用户粉丝数和关注数
	GetRelationCounter(context.Context, *UserInfoReq) (*RelationCounterResp, error)
	// 用户金币钻石接口
	//
	// 获取钻石兑换金币商品列表
	GetGoodsList(context.Context, *UserInfoReq) (*GoodsListResp, error)
	// 钻石兑换成金币
	ExchangeGold(context.Context, *ExchangeGoldReq) (*BalanceResp, error)
	// 获取余额
	GetBalance(context.Context, *UserInfoReq) (*BalanceResp, error)
	// 用户虚拟商品接口
	//
	//用户购买座驾
	UserBuyCar(context.Context, *CarInfoReq) (*BalanceResp, error)
	// 获取用户拥有的座驾
	GetCarItems(context.Context, *UserInfoReq) (*CarItemsResp, error)
	//用户更换座驾
	UserChangeCar(context.Context, *CarInfoReq) (*Empty, error)
	//用户购买头相框
	UserBuyAvatar(context.Context, *AvatarInfoReq) (*BalanceResp, error)
	// 获取用户拥有的头相框
	GetAvatarList(context.Context, *UserInfoReq) (*AvatarItemsResp, error)
	//用户更换头相框
	UserChangeAvatar(context.Context, *AvatarInfoReq) (*Empty, error)
	//用户购买vip
	UserBuyVip(context.Context, *VipInfoReq) (*UserBuyVipResp, error)
	// 获取用户拥有的vip
	GetVipList(context.Context, *UserInfoReq) (*VipItemsResp, error)
	// vip领取接口
	VipReceiveCoin(context.Context, *VipReceiveCoinReq) (*VipReceiveCoinResp, error)
	//Vip用户使用座驾及头像框
	UserChangeVipGift(context.Context, *VipInfoReq) (*Empty, error)
	//vip用户是否领取金币
	VipUserIsReceiveCoin(context.Context, *UserInfoReq) (*ReceiveResp, error)
	// 获取弹幕数
	GetBarrage(context.Context, *BarrageReq) (*BarrageRsp, error)
	//背景
	UserBuyBackground(context.Context, *BackGroundInfoReq) (*BackGroundInfoResp, error)
	GetBackGroundItems(context.Context, *UserInfoReq) (*BackGroundItemsResp, error)
	GetUserPrivacy(context.Context, *UserInfoReq) (*UserPrivacyRsp, error)
	UpdateUserPrivacy(context.Context, *UserPrivacyUpdateReq) (*UserPrivacyRsp, error)
}

// UnimplementedUserInfoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserInfoServiceServer struct {
}

func (*UnimplementedUserInfoServiceServer) GetUserInfo(context.Context, *UserInfoReq) (*UserInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfo not implemented")
}
func (*UnimplementedUserInfoServiceServer) InitBaseInfo(context.Context, *BaseInfoReq) (*UserInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitBaseInfo not implemented")
}
func (*UnimplementedUserInfoServiceServer) UpdateUserInfo(context.Context, *UpdateUserInfoReq) (*UserInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserInfo not implemented")
}
func (*UnimplementedUserInfoServiceServer) SearchUser(context.Context, *SearchUserReq) (*SearchUserResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchUser not implemented")
}
func (*UnimplementedUserInfoServiceServer) GetUserProfile(context.Context, *UserInfoReq) (*UserProfileResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserProfile not implemented")
}
func (*UnimplementedUserInfoServiceServer) GetRelation(context.Context, *UserRelationReq) (*UserRelationResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRelation not implemented")
}
func (*UnimplementedUserInfoServiceServer) GetUserRelation(context.Context, *UserInfoReq) (*GetUserRelationResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserRelation not implemented")
}
func (*UnimplementedUserInfoServiceServer) Follow(context.Context, *FollowReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Follow not implemented")
}
func (*UnimplementedUserInfoServiceServer) Blacklist(context.Context, *BlacklistReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Blacklist not implemented")
}
func (*UnimplementedUserInfoServiceServer) GetRelationCounter(context.Context, *UserInfoReq) (*RelationCounterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRelationCounter not implemented")
}
func (*UnimplementedUserInfoServiceServer) GetGoodsList(context.Context, *UserInfoReq) (*GoodsListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGoodsList not implemented")
}
func (*UnimplementedUserInfoServiceServer) ExchangeGold(context.Context, *ExchangeGoldReq) (*BalanceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExchangeGold not implemented")
}
func (*UnimplementedUserInfoServiceServer) GetBalance(context.Context, *UserInfoReq) (*BalanceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}
func (*UnimplementedUserInfoServiceServer) UserBuyCar(context.Context, *CarInfoReq) (*BalanceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserBuyCar not implemented")
}
func (*UnimplementedUserInfoServiceServer) GetCarItems(context.Context, *UserInfoReq) (*CarItemsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCarItems not implemented")
}
func (*UnimplementedUserInfoServiceServer) UserChangeCar(context.Context, *CarInfoReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserChangeCar not implemented")
}
func (*UnimplementedUserInfoServiceServer) UserBuyAvatar(context.Context, *AvatarInfoReq) (*BalanceResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserBuyAvatar not implemented")
}
func (*UnimplementedUserInfoServiceServer) GetAvatarList(context.Context, *UserInfoReq) (*AvatarItemsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAvatarList not implemented")
}
func (*UnimplementedUserInfoServiceServer) UserChangeAvatar(context.Context, *AvatarInfoReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserChangeAvatar not implemented")
}
func (*UnimplementedUserInfoServiceServer) UserBuyVip(context.Context, *VipInfoReq) (*UserBuyVipResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserBuyVip not implemented")
}
func (*UnimplementedUserInfoServiceServer) GetVipList(context.Context, *UserInfoReq) (*VipItemsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVipList not implemented")
}
func (*UnimplementedUserInfoServiceServer) VipReceiveCoin(context.Context, *VipReceiveCoinReq) (*VipReceiveCoinResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VipReceiveCoin not implemented")
}
func (*UnimplementedUserInfoServiceServer) UserChangeVipGift(context.Context, *VipInfoReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserChangeVipGift not implemented")
}
func (*UnimplementedUserInfoServiceServer) VipUserIsReceiveCoin(context.Context, *UserInfoReq) (*ReceiveResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VipUserIsReceiveCoin not implemented")
}
func (*UnimplementedUserInfoServiceServer) GetBarrage(context.Context, *BarrageReq) (*BarrageRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBarrage not implemented")
}
func (*UnimplementedUserInfoServiceServer) UserBuyBackground(context.Context, *BackGroundInfoReq) (*BackGroundInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserBuyBackground not implemented")
}
func (*UnimplementedUserInfoServiceServer) GetBackGroundItems(context.Context, *UserInfoReq) (*BackGroundItemsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBackGroundItems not implemented")
}
func (*UnimplementedUserInfoServiceServer) GetUserPrivacy(context.Context, *UserInfoReq) (*UserPrivacyRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserPrivacy not implemented")
}
func (*UnimplementedUserInfoServiceServer) UpdateUserPrivacy(context.Context, *UserPrivacyUpdateReq) (*UserPrivacyRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserPrivacy not implemented")
}

func RegisterUserInfoServiceServer(s *grpc.Server, srv UserInfoServiceServer) {
	s.RegisterService(&_UserInfoService_serviceDesc, srv)
}

func _UserInfoService_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).GetUserInfo(ctx, req.(*UserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_InitBaseInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BaseInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).InitBaseInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/InitBaseInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).InitBaseInfo(ctx, req.(*BaseInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_UpdateUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).UpdateUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/UpdateUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).UpdateUserInfo(ctx, req.(*UpdateUserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_SearchUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).SearchUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/SearchUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).SearchUser(ctx, req.(*SearchUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_GetUserProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).GetUserProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/GetUserProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).GetUserProfile(ctx, req.(*UserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_GetRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRelationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).GetRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/GetRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).GetRelation(ctx, req.(*UserRelationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_GetUserRelation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).GetUserRelation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/GetUserRelation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).GetUserRelation(ctx, req.(*UserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_Follow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FollowReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).Follow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/Follow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).Follow(ctx, req.(*FollowReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_Blacklist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlacklistReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).Blacklist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/Blacklist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).Blacklist(ctx, req.(*BlacklistReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_GetRelationCounter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).GetRelationCounter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/GetRelationCounter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).GetRelationCounter(ctx, req.(*UserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_GetGoodsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).GetGoodsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/GetGoodsList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).GetGoodsList(ctx, req.(*UserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_ExchangeGold_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExchangeGoldReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).ExchangeGold(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/ExchangeGold",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).ExchangeGold(ctx, req.(*ExchangeGoldReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).GetBalance(ctx, req.(*UserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_UserBuyCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).UserBuyCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/UserBuyCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).UserBuyCar(ctx, req.(*CarInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_GetCarItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).GetCarItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/GetCarItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).GetCarItems(ctx, req.(*UserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_UserChangeCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).UserChangeCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/UserChangeCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).UserChangeCar(ctx, req.(*CarInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_UserBuyAvatar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AvatarInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).UserBuyAvatar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/UserBuyAvatar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).UserBuyAvatar(ctx, req.(*AvatarInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_GetAvatarList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).GetAvatarList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/GetAvatarList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).GetAvatarList(ctx, req.(*UserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_UserChangeAvatar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AvatarInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).UserChangeAvatar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/UserChangeAvatar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).UserChangeAvatar(ctx, req.(*AvatarInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_UserBuyVip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VipInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).UserBuyVip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/UserBuyVip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).UserBuyVip(ctx, req.(*VipInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_GetVipList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).GetVipList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/GetVipList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).GetVipList(ctx, req.(*UserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_VipReceiveCoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VipReceiveCoinReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).VipReceiveCoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/VipReceiveCoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).VipReceiveCoin(ctx, req.(*VipReceiveCoinReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_UserChangeVipGift_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VipInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).UserChangeVipGift(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/UserChangeVipGift",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).UserChangeVipGift(ctx, req.(*VipInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_VipUserIsReceiveCoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).VipUserIsReceiveCoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/VipUserIsReceiveCoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).VipUserIsReceiveCoin(ctx, req.(*UserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_GetBarrage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BarrageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).GetBarrage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/GetBarrage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).GetBarrage(ctx, req.(*BarrageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_UserBuyBackground_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackGroundInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).UserBuyBackground(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/UserBuyBackground",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).UserBuyBackground(ctx, req.(*BackGroundInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_GetBackGroundItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).GetBackGroundItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/GetBackGroundItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).GetBackGroundItems(ctx, req.(*UserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_GetUserPrivacy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).GetUserPrivacy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/GetUserPrivacy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).GetUserPrivacy(ctx, req.(*UserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserInfoService_UpdateUserPrivacy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserPrivacyUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserInfoServiceServer).UpdateUserPrivacy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_info.UserInfoService/UpdateUserPrivacy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserInfoServiceServer).UpdateUserPrivacy(ctx, req.(*UserPrivacyUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserInfoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user_info.UserInfoService",
	HandlerType: (*UserInfoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserInfo",
			Handler:    _UserInfoService_GetUserInfo_Handler,
		},
		{
			MethodName: "InitBaseInfo",
			Handler:    _UserInfoService_InitBaseInfo_Handler,
		},
		{
			MethodName: "UpdateUserInfo",
			Handler:    _UserInfoService_UpdateUserInfo_Handler,
		},
		{
			MethodName: "SearchUser",
			Handler:    _UserInfoService_SearchUser_Handler,
		},
		{
			MethodName: "GetUserProfile",
			Handler:    _UserInfoService_GetUserProfile_Handler,
		},
		{
			MethodName: "GetRelation",
			Handler:    _UserInfoService_GetRelation_Handler,
		},
		{
			MethodName: "GetUserRelation",
			Handler:    _UserInfoService_GetUserRelation_Handler,
		},
		{
			MethodName: "Follow",
			Handler:    _UserInfoService_Follow_Handler,
		},
		{
			MethodName: "Blacklist",
			Handler:    _UserInfoService_Blacklist_Handler,
		},
		{
			MethodName: "GetRelationCounter",
			Handler:    _UserInfoService_GetRelationCounter_Handler,
		},
		{
			MethodName: "GetGoodsList",
			Handler:    _UserInfoService_GetGoodsList_Handler,
		},
		{
			MethodName: "ExchangeGold",
			Handler:    _UserInfoService_ExchangeGold_Handler,
		},
		{
			MethodName: "GetBalance",
			Handler:    _UserInfoService_GetBalance_Handler,
		},
		{
			MethodName: "UserBuyCar",
			Handler:    _UserInfoService_UserBuyCar_Handler,
		},
		{
			MethodName: "GetCarItems",
			Handler:    _UserInfoService_GetCarItems_Handler,
		},
		{
			MethodName: "UserChangeCar",
			Handler:    _UserInfoService_UserChangeCar_Handler,
		},
		{
			MethodName: "UserBuyAvatar",
			Handler:    _UserInfoService_UserBuyAvatar_Handler,
		},
		{
			MethodName: "GetAvatarList",
			Handler:    _UserInfoService_GetAvatarList_Handler,
		},
		{
			MethodName: "UserChangeAvatar",
			Handler:    _UserInfoService_UserChangeAvatar_Handler,
		},
		{
			MethodName: "UserBuyVip",
			Handler:    _UserInfoService_UserBuyVip_Handler,
		},
		{
			MethodName: "GetVipList",
			Handler:    _UserInfoService_GetVipList_Handler,
		},
		{
			MethodName: "VipReceiveCoin",
			Handler:    _UserInfoService_VipReceiveCoin_Handler,
		},
		{
			MethodName: "UserChangeVipGift",
			Handler:    _UserInfoService_UserChangeVipGift_Handler,
		},
		{
			MethodName: "VipUserIsReceiveCoin",
			Handler:    _UserInfoService_VipUserIsReceiveCoin_Handler,
		},
		{
			MethodName: "GetBarrage",
			Handler:    _UserInfoService_GetBarrage_Handler,
		},
		{
			MethodName: "UserBuyBackground",
			Handler:    _UserInfoService_UserBuyBackground_Handler,
		},
		{
			MethodName: "GetBackGroundItems",
			Handler:    _UserInfoService_GetBackGroundItems_Handler,
		},
		{
			MethodName: "GetUserPrivacy",
			Handler:    _UserInfoService_GetUserPrivacy_Handler,
		},
		{
			MethodName: "UpdateUserPrivacy",
			Handler:    _UserInfoService_UpdateUserPrivacy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_info.proto",
}
